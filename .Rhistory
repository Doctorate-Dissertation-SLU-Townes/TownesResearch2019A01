VIFregression <- vif(CRECEIVEregressionTrfm)
summary(VIFregression)
library(tidyverse) # loads the basic R packages
library(here) # enables file portability
library(readr) # functions for reading data
library(dplyr) # functions for data wrangling
library(janitor) # functions for data cleaning
library(naniar) # functions for analyzing missing data
library(ggplot2) # functions for data visualizations
library(boot) # functions for regression analysis
library(ordinal) # functions for regression models for ordinal data
library(MASS) # functions for ordered logistic or probit regression
library(broom) # functions for tidying ordinal logistic regression models
library(gvlma) # functions for global validation of linear model assumptions
library(lmtest) # functions for testing linear regression models
library(leaps) # functions for regression subset selection
library(car) # companion to applied regression
library(aod) # functions to analyze overdispersed data counts and proportions
library(pscl) # contains function for McFadden's Pseudo R2 for logistic regression
Sample90to95C %>%
filter(CRECEIVE <= 10) %>%
mutate(CRECEIVEsqrt = sqrt(CRECEIVE)) -> Sample90to95D
png(filename = here("Results", "QQplotCRECEIVEsqrt.png"))
qqnorm(Sample90to95D$CRECEIVEsqrt, pch = 1, frame = FALSE,
main = "Normal Q-Q Plot for CRECEIVEsqrt", xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
qqline(Sample90to95D$CRECEIVEsqrt, col = "green", lwd = 2)
dev.off()
# Regression
CRECEIVEregressionTrfm <- lm(CRECEIVEsqrt ~ GYEAR + CAT02 + CAT03 + CAT04 + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG, data = Sample90to95D, na.action = na.omit)
summary(CRECEIVEregressionTrfm)
# Global check of linear regression assumptions
print("Perform Global Check of Linear Regression Assumptions")
par(mfrow=c(2,2))
gvlma(CRECEIVEregressionTrfm)
# Residuals
print("Regression Residuals", quote = FALSE)
CRECEIVEresidTrfm <- residuals(CRECEIVEregressionTrfm)
summary(CRECEIVEresidTrfm)
# Check for homoscedasticity of residuals or equal variance
# Check for normality of residuals
png(filename = here("Results", "MultRegresQQplotModelResidualsTrfm.png"))
par(mfrow=c(2,2))
plot(CRECEIVEregressionTrfm)
dev.off()
# Check for autocorrelation of residuals using Durbin-Watson test
print("Check for Autocorrelation of Residuals", quote = FALSE)
AutoCorr <- dwtest(CRECEIVEregressionTrfm)
summary(AutoCorr)
# Check that the independent variables and the residuals are uncorrelated
print("Check for Correlation between Independent Variables and Residuals", quote = FALSE)
CorrGYEAR <- cor.test(Sample90to95D$GYEAR, CRECEIVEregressionTrfm$residuals)
summary(CorrGYEAR)
CorrCAT <- cor.test(Sample90to95D$CAT, CRECEIVEregressionTrfm$residuals)
summary(CorrCAT)
CorrCLAIMS <- cor.test(Sample90to95D$CLAIMS, CRECEIVEregressionTrfm$residuals)
summary(CorrCLAIMS)
CorrORIGINAL <- cor.test(Sample90to95D$ORIGINAL, CRECEIVEregressionTrfm$residuals)
summary(CorrORIGINAL)
CorrGENERAL <- cor.test(Sample90to95D$GENERAL, CRECEIVEregressionTrfm$residuals)
summary(CorrGENERAL)
CorrFWDAPLAG <- cor.test(Sample90to95D$FWDAPLAG, CRECEIVEregressionTrfm$residuals)
summary(CorrFWDAPLAG)
# Check that the variability in independent variable values is positive
print("Check for Positive Variablity of Independent Variable Values", quote = FALSE)
VarRegression <- var(Sample90to95D)
summary(VarRegression)
# Check for perfect multicollinearity among the variables
print("Check for Multicollinearity Among Variables", quote = FALSE)
VIFregression <- vif(CRECEIVEregressionTrfm)
summary(VIFregression)
logitCRECEIVE <- glm(CRECbinary ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, family = binomial, na.action = na.omit)
summary(logitCRECEIVE)
coefs <- coef(logitCRECEIVE)
# Raise e to the coefficients
print("Raise e to the Coefficients", quote = FALSE)
exp(coefs)
# Obtain the McFadden pseudo R2
print("Obtain the McFadden Pseudo R-squared", quote = FALSE)
pR2(logitCRECEIVE)
# Confidence intervals for the coefficients
print("Confidence Intervals for the Coefficients", quote = FALSE)
confint(logitCRECEIVE, level = 0.95)
logitCRECEIVE <- glm(CRECbinary ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, family = binomial, na.action = na.omit)
summary(logitCRECEIVE)
coefs <- coef(logitCRECEIVE)
print(1-pchisq(logitCRECEIVE$coefficients, df = logitCRECEIVE$coefficients))
# Raise e to the coefficients
print("Raise e to the Coefficients", quote = FALSE)
exp(coefs)
# Obtain the McFadden pseudo R2
print("Obtain the McFadden Pseudo R-squared", quote = FALSE)
pR2(logitCRECEIVE)
# Confidence intervals for the coefficients
print("Confidence Intervals for the Coefficients", quote = FALSE)
confint(logitCRECEIVE, level = 0.95)
logitCRECEIVE <- glm(CRECbinary ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, family = binomial, na.action = na.omit)
summary(logitCRECEIVE)
coefs <- coef(logitCRECEIVE)
print("p value", quote = FALSE)
print(1-pchisq(9.167, df = 1985))
# Raise e to the coefficients
print("Raise e to the Coefficients", quote = FALSE)
exp(coefs)
# Obtain the McFadden pseudo R2
print("Obtain the McFadden Pseudo R-squared", quote = FALSE)
pR2(logitCRECEIVE)
# Confidence intervals for the coefficients
print("Confidence Intervals for the Coefficients", quote = FALSE)
confint(logitCRECEIVE, level = 0.95)
logitCRECEIVE <- glm(CRECbinary ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, family = binomial, na.action = na.omit)
summary(logitCRECEIVE)
coefs <- coef(logitCRECEIVE)
print("p value = " 1-pchisq(9.167, df = 1985) , quote = FALSE)
logitCRECEIVE <- glm(CRECbinary ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, family = binomial, na.action = na.omit)
summary(logitCRECEIVE)
coefs <- coef(logitCRECEIVE)
print("p value = " (1-pchisq(9.167, df = 1985)) , quote = FALSE)
logitCRECEIVE <- glm(CRECbinary ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, family = binomial, na.action = na.omit)
summary(logitCRECEIVE)
coefs <- coef(logitCRECEIVE)
print("p value =", quote = FALSE)
print (1-pchisq(9.167, df = 1985), round=5)
# Raise e to the coefficients
print("Raise e to the Coefficients", quote = FALSE)
exp(coefs)
# Obtain the McFadden pseudo R2
print("Obtain the McFadden Pseudo R-squared", quote = FALSE)
pR2(logitCRECEIVE)
# Confidence intervals for the coefficients
print("Confidence Intervals for the Coefficients", quote = FALSE)
confint(logitCRECEIVE, level = 0.95)
CRECEIVEordinal <- clm(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C)
print("Ordinal Logistic Regression Method 01", quote = FALSE)
summary(CRECEIVEordinal)
CRECEIVEordinal01 <- polr(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, Hess = TRUE, model = TRUE, method = "logistic")
print("Ordinal Logistic Regression Method 02")
summary(CRECEIVEordinal01)
coefsOrdinal <- coefficients(summary(CRECEIVEordinal))
tvalues <- summary(CRECEIVEordinal01)$coefficients[, "t value"]
pvalues <- pt(abs(tvalues),df.residual(CRECEIVEordinal01),lower.tail = FALSE)*2
pv <- pnorm(abs(tvalues), df.residual(CRECEIVEordinal01),lower.tail = FALSE)*2
coefsOrdinal <- cbind(coefsOrdinal, "p values" = round(pvalues, 5))
coefsOrdinal <- cbind(coefsOrdinal, "p values (Normal)" = round(pv, 5))
print("Ordinal Logistic Regression - P-value Calculations")
summary(coefsOrdinal)
CRECEIVEordinal <- clm(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C)
print("Ordinal Logistic Regression Method 01", quote = FALSE)
summary(CRECEIVEordinal)
CRECEIVEordinal01 <- polr(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, Hess = TRUE, model = TRUE, method = "logistic")
print("Ordinal Logistic Regression Method 02")
summary(CRECEIVEordinal01)
coefsOrdinal <- coefficients(summary(CRECEIVEordinal))
tvalues <- summary(CRECEIVEordinal01)$coefficients[, "t value"]
pvalues <- pt(abs(tvalues),df.residual(CRECEIVEordinal01$coefficients),lower.tail = FALSE)*2
CRECEIVEordinal <- clm(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C)
print("Ordinal Logistic Regression Method 01", quote = FALSE)
summary(CRECEIVEordinal)
CRECEIVEordinal01 <- polr(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, Hess = TRUE, model = TRUE, method = "logistic")
print("Ordinal Logistic Regression Method 02")
summary(CRECEIVEordinal01)
coefsOrdinal <- coefficients(summary(CRECEIVEordinal))
tvalues <- summary(CRECEIVEordinal01)$coefficients[, "t value"]
pvalues <- pt(abs(tvalues),df.residual(CRECEIVEordinal01),lower.tail = FALSE)*2
pv <- pnorm(abs(tvalues), df.residual(CRECEIVEordinal01),lower.tail = FALSE)*2
coefsOrdinal01 <- cbind(coefsOrdinal, "p values" = round(pvalues, 5))
coefsOrdinal01 <- cbind(coefsOrdinal, "p values (Normal)" = round(pv, 5))
print("Ordinal Logistic Regression - P-value Calculations")
summary(coefsOrdinal)
CRECEIVEordinal <- clm(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C)
print("Ordinal Logistic Regression Method 01", quote = FALSE)
summary(CRECEIVEordinal)
CRECEIVEordinal01 <- polr(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, Hess = TRUE, model = TRUE, method = "logistic")
print("Ordinal Logistic Regression Method 02")
summary(CRECEIVEordinal01)
coefsOrdinal <- coefficients(summary(CRECEIVEordinal))
tvalues <- summary(CRECEIVEordinal01)$coefficients[, "t value"]
pvalues <- pt(abs(tvalues),df.residual(CRECEIVEordinal01),lower.tail = FALSE)*2
pv <- pnorm(abs(tvalues), df.residual(CRECEIVEordinal01),lower.tail = FALSE)*2
coefsOrdinal01 <- cbind(coefsOrdinal, "p values" = round(pvalues, 5))
coefsOrdinal01 <- cbind(coefsOrdinal, "p values (Normal)" = round(pv, 5))
print("Ordinal Logistic Regression - P-value Calculations")
summary(coefsOrdinal01)
CRECEIVEordinal <- clm(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C)
print("Ordinal Logistic Regression Method 01", quote = FALSE)
summary(CRECEIVEordinal)
CRECEIVEordinal01 <- polr(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, Hess = TRUE, model = TRUE, method = "logistic")
print("Ordinal Logistic Regression Method 02")
summary(CRECEIVEordinal01)
summary(anova(CRECEIVEordinal01))
CRECEIVEordinal <- clm(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C)
print("Ordinal Logistic Regression Method 01", quote = FALSE)
summary(CRECEIVEordinal)
CRECEIVEordinal01 <- polr(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, Hess = TRUE, model = TRUE, method = "logistic")
print("Ordinal Logistic Regression Method 02")
summary(CRECEIVEordinal01)
summary(anova(CRECEIVEordinal01, type = 2))
CRECEIVEordinal <- clm(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C)
print("Ordinal Logistic Regression Method 01", quote = FALSE)
summary(CRECEIVEordinal)
CRECEIVEordinal01 <- polr(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, Hess = TRUE, model = TRUE, method = "logistic")
print("Ordinal Logistic Regression Method 02")
summary(CRECEIVEordinal01)
CRECanova <- anova(CRECEIVEordinal01, type = 2)
CRECEIVEordinal <- clm(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C)
print("Ordinal Logistic Regression Method 01", quote = FALSE)
summary(CRECEIVEordinal)
CRECEIVEordinal01 <- polr(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, Hess = TRUE, model = TRUE, method = "logistic")
print("Ordinal Logistic Regression Method 02")
summary(CRECEIVEordinal01)
CRECanova <- anova(CRECEIVEordinal01, type = 3)
CRECEIVEordinal <- clm(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C)
print("Ordinal Logistic Regression Method 01", quote = FALSE)
summary(CRECEIVEordinal)
CRECEIVEordinal01 <- polr(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, Hess = TRUE, model = TRUE, method = "logistic")
print("Ordinal Logistic Regression Method 02")
summary(CRECEIVEordinal01)
coefsOrdinal <- coefficients(summary(CRECEIVEordinal01))
tvalues <- summary(CRECEIVEordinal01)$coefficients[, "t value"]
pvalues <- pt(abs(tvalues),df.residual(CRECEIVEordinal01),lower.tail = FALSE)*2
pval <- pnorm(abs(coefsOrdinal)[,"t value"],lower.tail = FALSE)*2
coefsOrdinal01 <- cbind(coefsOrdinal, "p values" = round(pvalues, 5))
coefsOrdinal01 <- cbind(coefsOrdinal, "p values (Normal)" = round(pval, 5))
print("Ordinal Logistic Regression - P-value Calculations")
summary(coefsOrdinal01)
CRECEIVEordinal <- clm(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C)
print("Ordinal Logistic Regression Method 01", quote = FALSE)
summary(CRECEIVEordinal)
CRECEIVEordinal01 <- polr(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, Hess = TRUE, model = TRUE, method = "logistic")
print("Ordinal Logistic Regression Method 02")
summary(CRECEIVEordinal01)
coefsOrdinal <- coefficients(summary(CRECEIVEordinal01))
tvalues <- summary(CRECEIVEordinal01)$coefficients[, "t value"]
pvalues <- pt(abs(tvalues),df.residual(CRECEIVEordinal01),lower.tail = FALSE)*2
pval <- pnorm(abs(coefsOrdinal)[,"t value"],lower.tail = FALSE)*2
coefsOrdinal01 <- cbind(coefsOrdinal, "p values (t dist)" = round(pvalues, 5))
coefsOrdinal01 <- cbind(coefsOrdinal, "p values (Normal)" = round(pval, 5))
print("Ordinal Logistic Regression - P-value Calculations")
summary(coefsOrdinal01)
CRECEIVEordinal <- clm(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C)
print("Ordinal Logistic Regression Method 01", quote = FALSE)
summary(CRECEIVEordinal)
CRECEIVEordinal01 <- polr(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, Hess = TRUE, model = TRUE, method = "logistic")
print("Ordinal Logistic Regression Method 02")
summary(CRECEIVEordinal01)
coefsOrdinal <- coefficients(summary(CRECEIVEordinal01))
tvalues <- summary(CRECEIVEordinal01)$coefficients[, "t value"]
pvalues <- pt(abs(tvalues),df.residual(CRECEIVEordinal01),lower.tail = FALSE)*2
pval <- pnorm(abs(coefsOrdinal)[,"t value"],lower.tail = FALSE)*2
coefsOrdinal01 <- cbind(coefsOrdinal, "p values (t dist)" = round(pvalues, 5))
coefsOrdinal01 <- cbind(coefsOrdinal, "p values (Normal)" = round(pval, 5))
print("Ordinal Logistic Regression - P-value Calculations")
print(coefsOrdinal01)
CRECEIVEordinal <- clm(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C)
print("Ordinal Logistic Regression Method 01", quote = FALSE)
summary(CRECEIVEordinal)
CRECEIVEordinal01 <- polr(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, Hess = TRUE, model = TRUE, method = "logistic")
print("Ordinal Logistic Regression Method 02")
summary(CRECEIVEordinal01)
coefsOrdinal <- coefficients(summary(CRECEIVEordinal01))
tvalues <- summary(CRECEIVEordinal01)$coefficients[, "t value"]
pvalues <- pt(abs(coefsOrdinal)[,"t value"],lower.tail = FALSE)*2
CRECEIVEordinal <- clm(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C)
print("Ordinal Logistic Regression Method 01", quote = FALSE)
summary(CRECEIVEordinal)
CRECEIVEordinal01 <- polr(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, Hess = TRUE, model = TRUE, method = "logistic")
print("Ordinal Logistic Regression Method 02")
summary(CRECEIVEordinal01)
coefsOrdinal <- coefficients(summary(CRECEIVEordinal01))
tvalues <- summary(CRECEIVEordinal01)$coefficients[, "t value"]
pvalues <- pt(abs(coefsOrdinal)[,"t value"], df=CRECEIVEordinal01$df,lower.tail = FALSE)*2
pval <- pnorm(abs(coefsOrdinal)[,"t value"],lower.tail = FALSE)*2
coefsOrdinal01 <- cbind(coefsOrdinal, "p values (t dist)" = round(pvalues, 5))
coefsOrdinal01 <- cbind(coefsOrdinal, "p values (Normal)" = round(pval, 5))
print("Ordinal Logistic Regression - P-value Calculations")
print(coefsOrdinal01)
CRECEIVEordinal <- clm(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C)
print("Ordinal Logistic Regression Method 01", quote = FALSE)
summary(CRECEIVEordinal)
CRECEIVEordinal01 <- polr(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, Hess = TRUE, model = TRUE, method = "logistic")
print("Ordinal Logistic Regression Method 02")
summary(CRECEIVEordinal01)
coefsOrdinal <- coefficients(summary(CRECEIVEordinal01))
tvalues <- summary(CRECEIVEordinal01)$coefficients[, "t value"]
pvalues <- pt(abs(coefsOrdinal)[,"t value"], df=CRECEIVEordinal01$df,lower.tail = FALSE)*2
pval <- pnorm(abs(coefsOrdinal)[,"t value"],lower.tail = FALSE)*2
coefsOrdinal01 <- cbind(coefsOrdinal, "p values (t dist)" = round(pvalues, 5))
coefsOrdinal01 <- cbind(coefsOrdinal01, "p values (Normal)" = round(pval, 5))
print("Ordinal Logistic Regression with P-values")
print(coefsOrdinal01)
CRECEIVEordinal <- clm(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C)
print("Ordinal Logistic Regression Method 01", quote = FALSE)
summary(CRECEIVEordinal)
CRECEIVEordinal01 <- polr(as.factor(CRECordinal) ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, Hess = TRUE, model = TRUE, method = "logistic")
print("Ordinal Logistic Regression Method 02")
summary(CRECEIVEordinal01)
coefsOrdinal <- coefficients(summary(CRECEIVEordinal01))
pvalues <- pt(abs(coefsOrdinal)[,"t value"], df=CRECEIVEordinal01$df,lower.tail = FALSE)*2
pval <- pnorm(abs(coefsOrdinal)[,"t value"],lower.tail = FALSE)*2
coefsOrdinal01 <- cbind(coefsOrdinal, "p values (t dist)" = round(pvalues, 5))
coefsOrdinal01 <- cbind(coefsOrdinal01, "p values (Normal)" = round(pval, 5))
print("Ordinal Logistic Regression with P-values")
print(coefsOrdinal01)
install.packages("ResourceSelection")
library(tidyverse) # loads the basic R packages
library(here) # enables file portability
library(readr) # functions for reading data
library(dplyr) # functions for data wrangling
library(janitor) # functions for data cleaning
library(naniar) # functions for analyzing missing data
library(ggplot2) # functions for data visualizations
library(boot) # functions for regression analysis
library(ordinal) # functions for regression models for ordinal data
library(MASS) # functions for ordered logistic or probit regression
library(broom) # functions for tidying ordinal logistic regression models
library(gvlma) # functions for global validation of linear model assumptions
library(lmtest) # functions for testing linear regression models
library(leaps) # functions for regression subset selection
library(car) # companion to applied regression
library(aod) # functions to analyze overdispersed data counts and proportions
library(pscl) # contains function for McFadden's Pseudo R2 for logistic regression
library(ResourceSelection) # contains function for Hosmer-Lemdshow goodness of fit test
logitCRECEIVE <- glm(CRECbinary ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, family = binomial, na.action = na.omit)
summary(logitCRECEIVE)
coefs <- coef(logitCRECEIVE)
# Raise e to the coefficients
print("Raise e to the Coefficients", quote = FALSE)
exp(coefs)
# Obtain the McFadden pseudo R2
print("Obtain the McFadden Pseudo R-squared", quote = FALSE)
pR2(logitCRECEIVE)
# Confidence intervals for the coefficients
print("Confidence Intervals for the Coefficients", quote = FALSE)
confint(logitCRECEIVE, level = 0.95)
# Hosemer-Lemeshow Goodness of Fit Test
print("Hosemer-Lemeshow Goodness of Fit Test", quote = FALSE)
hoslem.test(logitCRECEIVE$CRECbinary, fitted(logitCRECEIVE))
logitCRECEIVE <- glm(CRECbinary ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, family = binomial, na.action = na.omit)
summary(logitCRECEIVE)
coefs <- coef(logitCRECEIVE)
# Raise e to the coefficients
print("Raise e to the Coefficients", quote = FALSE)
exp(coefs)
# Obtain the McFadden pseudo R2
print("Obtain the McFadden Pseudo R-squared", quote = FALSE)
pR2(logitCRECEIVE)
# Confidence intervals for the coefficients
print("Confidence Intervals for the Coefficients", quote = FALSE)
confint(logitCRECEIVE, level = 0.95)
# Hosemer-Lemeshow Goodness of Fit Test
print("Hosemer-Lemeshow Goodness of Fit Test", quote = FALSE)
hoslem.test(logitCRECEIVE$CRECbinary, fitted(logitCRECEIVE), g=10)
logitCRECEIVE <- glm(CRECbinary ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, family = binomial, na.action = na.omit)
summary(logitCRECEIVE)
coefs <- coef(logitCRECEIVE)
# Raise e to the coefficients
print("Raise e to the Coefficients", quote = FALSE)
exp(coefs)
# Obtain the McFadden pseudo R2
print("Obtain the McFadden Pseudo R-squared", quote = FALSE)
pR2(logitCRECEIVE)
# Confidence intervals for the coefficients
print("Confidence Intervals for the Coefficients", quote = FALSE)
confint(logitCRECEIVE, level = 0.95)
# Hosemer-Lemeshow Goodness of Fit Test
print("Hosemer-Lemeshow Goodness of Fit Test", quote = FALSE)
hoslem.test(as.numeric(logitCRECEIVE$CRECbinary), fitted(logitCRECEIVE), g=10)
logitCRECEIVE <- glm(CRECbinary ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, family = binomial, na.action = na.omit)
summary(logitCRECEIVE)
coefs <- coef(logitCRECEIVE)
# Raise e to the coefficients
print("Raise e to the Coefficients", quote = FALSE)
exp(coefs)
# Obtain the McFadden pseudo R2
print("Obtain the McFadden Pseudo R-squared", quote = FALSE)
pR2(logitCRECEIVE)
# Confidence intervals for the coefficients
print("Confidence Intervals for the Coefficients", quote = FALSE)
confint(logitCRECEIVE, level = 0.95)
# Hosemer-Lemeshow Goodness of Fit Test
print("Hosemer-Lemeshow Goodness of Fit Test", quote = FALSE)
GOF <- ResourceSelection::hoslem.test(logitCRECEIVE$CRECbinary, fitted(logitCRECEIVE), g=10)
logitCRECEIVE <- glm(CRECbinary ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, family = binomial)
summary(logitCRECEIVE)
coefs <- coef(logitCRECEIVE)
# Raise e to the coefficients
print("Raise e to the Coefficients", quote = FALSE)
exp(coefs)
# Obtain the McFadden pseudo R2
print("Obtain the McFadden Pseudo R-squared", quote = FALSE)
pR2(logitCRECEIVE)
# Confidence intervals for the coefficients
print("Confidence Intervals for the Coefficients", quote = FALSE)
confint(logitCRECEIVE, level = 0.95)
# Hosemer-Lemeshow Goodness of Fit Test
print("Hosemer-Lemeshow Goodness of Fit Test", quote = FALSE)
GOF <- hoslem.test(logitCRECEIVE$CRECbinary, fitted(logitCRECEIVE), g=10)
Sample90to95E <- Sample90to95C[complete.cases(Sample90to95C),]
logitCRECEIVE <- glm(CRECbinary ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95E, family = binomial, na.action = na.omit)
summary(logitCRECEIVE)
coefs <- coef(logitCRECEIVE)
# Raise e to the coefficients
print("Raise e to the Coefficients", quote = FALSE)
exp(coefs)
# Obtain the McFadden pseudo R2
print("Obtain the McFadden Pseudo R-squared", quote = FALSE)
pR2(logitCRECEIVE)
# Confidence intervals for the coefficients
print("Confidence Intervals for the Coefficients", quote = FALSE)
confint(logitCRECEIVE, level = 0.95)
# Hosemer-Lemeshow Goodness of Fit Test
print("Hosemer-Lemeshow Goodness of Fit Test", quote = FALSE)
GOF <- hoslem.test(logitCRECEIVE$CRECbinary, fitted(logitCRECEIVE), g=10)
Sample90to95E <- complete.cases(Sample90to95C)
logitCRECEIVE <- glm(CRECbinary ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95E, family = binomial, na.action = na.omit)
Sample90to95C %>%
complete.cases() %>%
as_tibble() -> Sample90to95E
logitCRECEIVE <- glm(CRECbinary ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95E, family = binomial, na.action = na.omit)
logitCRECEIVE <- glm(CRECbinary ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, family = binomial, na.action = na.omit)
summary(logitCRECEIVE)
coefs <- coef(logitCRECEIVE)
# Raise e to the coefficients
print("Raise e to the Coefficients", quote = FALSE)
exp(coefs)
# Obtain the McFadden pseudo R2
print("Obtain the McFadden Pseudo R-squared", quote = FALSE)
pR2(logitCRECEIVE)
# Confidence intervals for the coefficients
print("Confidence Intervals for the Coefficients", quote = FALSE)
confint(logitCRECEIVE, level = 0.95)
# Hosemer-Lemeshow Goodness of Fit Test
print("Hosemer-Lemeshow Goodness of Fit Test", quote = FALSE)
GOF <- hoslem.test(logitCRECEIVE$CRECbinary, fitted(logitCRECEIVE), g=10)
View(Sample90to95C)
logitCRECEIVE <- glm(CRECbinary ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, family = binomial, na.action = na.omit)
summary(logitCRECEIVE)
coefs <- coef(logitCRECEIVE)
# Raise e to the coefficients
print("Raise e to the Coefficients", quote = FALSE)
exp(coefs)
# Obtain the McFadden pseudo R2
print("Obtain the McFadden Pseudo R-squared", quote = FALSE)
pR2(logitCRECEIVE)
# Confidence intervals for the coefficients
print("Confidence Intervals for the Coefficients", quote = FALSE)
confint(logitCRECEIVE, level = 0.95)
# Hosemer-Lemeshow Goodness of Fit Test
print("Hosemer-Lemeshow Goodness of Fit Test", quote = FALSE)
GOF <- hoslem.test(as_numeric(logitCRECEIVE$CRECbinary), fitted(as_numeric(logitCRECEIVE)), g=10)
View(Sample90to95C)
View(Sample90to95E)
logitCRECEIVE <- glm(CRECbinary ~ as_numeric(GYEAR) + as_numeric(as.factor(CAT)) + as_numeric(CMADE) + as_numeric(CLAIMS) + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, family = binomial, na.action = na.omit)
logitCRECEIVE <- glm(CRECbinary ~ as.numeric(GYEAR) + as.numeric(as.factor(CAT)) + as.numeric(CMADE) + as.numeric(CLAIMS) + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, family = binomial, na.action = na.omit)
summary(logitCRECEIVE)
coefs <- coef(logitCRECEIVE)
# Raise e to the coefficients
print("Raise e to the Coefficients", quote = FALSE)
exp(coefs)
# Obtain the McFadden pseudo R2
print("Obtain the McFadden Pseudo R-squared", quote = FALSE)
pR2(logitCRECEIVE)
# Confidence intervals for the coefficients
print("Confidence Intervals for the Coefficients", quote = FALSE)
confint(logitCRECEIVE, level = 0.95)
# Hosemer-Lemeshow Goodness of Fit Test
print("Hosemer-Lemeshow Goodness of Fit Test", quote = FALSE)
GOF <- hoslem.test(as_numeric(logitCRECEIVE$CRECbinary), fitted(as_numeric(logitCRECEIVE)), g=10)
logitCRECEIVE <- glm(CRECbinary ~ as.numeric(GYEAR) + as.numeric(as.factor(CAT)) + as.numeric(CMADE) + as.numeric(CLAIMS) + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, family = binomial, na.action = na.omit)
summary(logitCRECEIVE)
coefs <- coef(logitCRECEIVE)
# Raise e to the coefficients
print("Raise e to the Coefficients", quote = FALSE)
exp(coefs)
# Obtain the McFadden pseudo R2
print("Obtain the McFadden Pseudo R-squared", quote = FALSE)
pR2(logitCRECEIVE)
# Confidence intervals for the coefficients
print("Confidence Intervals for the Coefficients", quote = FALSE)
confint(logitCRECEIVE, level = 0.95)
# Hosemer-Lemeshow Goodness of Fit Test
print("Hosemer-Lemeshow Goodness of Fit Test", quote = FALSE)
GOF <- hoslem.test(logitCRECEIVE$CRECbinary, fittedlogitCRECEIVE, g=10)
logitCRECEIVE <- glm(CRECbinary ~ as.numeric(GYEAR) + as.numeric(as.factor(CAT)) + as.numeric(CMADE) + as.numeric(CLAIMS) + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, family = binomial, na.action = na.omit)
summary(logitCRECEIVE)
coefs <- coef(logitCRECEIVE)
# Raise e to the coefficients
print("Raise e to the Coefficients", quote = FALSE)
exp(coefs)
# Obtain the McFadden pseudo R2
print("Obtain the McFadden Pseudo R-squared", quote = FALSE)
pR2(logitCRECEIVE)
# Confidence intervals for the coefficients
print("Confidence Intervals for the Coefficients", quote = FALSE)
confint(logitCRECEIVE, level = 0.95)
# Hosemer-Lemeshow Goodness of Fit Test
print("Hosemer-Lemeshow Goodness of Fit Test", quote = FALSE)
GOF <- hoslem.test(logitCRECEIVE$CRECbinary, fitted(logitCRECEIVE), g=10)
logitCRECEIVE <- glm(CRECbinary ~ GYEAR + as.factor(CAT) + CMADE + CLAIMS + ORIGINAL + GENERAL + FWDAPLAG + BCKGTLAG, data = Sample90to95C, family = binomial, na.action = na.omit)
summary(logitCRECEIVE)
coefs <- coef(logitCRECEIVE)
# Raise e to the coefficients
print("Raise e to the Coefficients", quote = FALSE)
exp(coefs)
# Obtain the McFadden pseudo R2
print("Obtain the McFadden Pseudo R-squared", quote = FALSE)
pR2(logitCRECEIVE)
# Confidence intervals for the coefficients
print("Confidence Intervals for the Coefficients", quote = FALSE)
confint(logitCRECEIVE, level = 0.95)
# Hosemer-Lemeshow Goodness of Fit Test
print("Hosemer-Lemeshow Goodness of Fit Test", quote = FALSE)
GOF <- hoslem.test(logitCRECEIVE$CRECbinary, fitted(logitCRECEIVE), g=10, data = Sample90to95C)
